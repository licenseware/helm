name: helm-cli
author: meysam@licenseware.io
branding:
  color: green
  icon: package
description: Deploy Helm chart in a GitHub action
inputs:
  action:
    default: upgrade -i
    description: upgrade -i, upgrade, install, uninstall, etc.
    required: false
  atomic:
    default: "1"
    description: Whether or not to pass `--atomic` to Helm
    required: false
  chart-dir:
    default: helm
    description: Relative path from the repository root directory
    required: false
  create-namespace:
    default: "0"
    description: Whether or not to pass `--create-namespace` to Helm
    required: false
  helm-version:
    default: v3.9.4
    required: false
  kubeconfig:
    description: 'A JSON/YAML encoded string e.g. {"key": "value"}'
    required: true
  namespace:
    default: default
    required: false
  release-name:
    default: ${{ github.event.repository.name }}
    required: false
  update-dependencies:
    default: "1"
    description: Whether or not to run `helm dependency update` before deployment
    required: false
  values:
    default: ""
    description: A comma separated list of values e.g. "key1=value1,key2=value2"
    required: false
  values-file:
    default: ""
    description: 'A JSON/YAML encoded string e.g. {"key": "value"}'
    required: false
  wait:
    default: "1"
    description: Whether or not to pass `--wait` to Helm
    required: false
runs:
  using: composite
  steps:
    - env:
        DESIRED_VERSION: ${{ inputs.helm-version }}
      name: Install Helm ${{ inputs.helm-version }}
      run: curl -fsSL https://git.io/get_helm.sh | bash
      shell: bash
    - if: inputs.update-dependencies == '1'
      name: Build Helm dependencies
      run: helm dependency update ${{ inputs.chart-dir }}
      shell: bash
    - if: inputs.values-file != ''
      name: Prepare values file
      run: |
        cat << 'EOF' > /tmp/values
        ${{ inputs.values-file }}
        EOF
        chmod 600 /tmp/values
      shell: bash
    - name: Prepare KUBECONFIG
      run: |
        cat << 'EOF' > /tmp/kubeconfig
        ${{ inputs.kubeconfig }}
        EOF
        chmod 600 /tmp/kubeconfig
      shell: bash
    - name: Deploy with Helm
      run: |
        helm ${{ inputs.action }} ${{ inputs.release-name }} ${{ inputs.chart-dir }} \
          --kubeconfig /tmp/kubeconfig \
          --namespace ${{ inputs.namespace }} \
          $([[ "${{ inputs.create-namespace }}" == "1" ]] && echo '--create-namespace') \
          $([[ "${{ inputs.atomic }}" == "1" ]] && echo '--atomic') \
          $([[ "${{ inputs.wait }}" == "1" ]] && echo '--wait') \
          $([[ "${{ inputs.values-file }}" != "" ]] && echo '--values /tmp/values') \
          $([[ "${{ inputs.values }}" != "" ]] && echo "--set ${{ inputs.values }}")
      shell: bash
